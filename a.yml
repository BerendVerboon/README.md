---
- hosts: localhost
  connection: local #
  become: yes
  vars:
    target_user: "{{ lookup('env', 'TARGET_USER') | default('john', false) }}"

  tasks:
    - name: Debug .xinitrc destination path
      debug:
        msg: "/home/{{ target_user }}/.xinitrc"

    - name: Update all packages to the latest version
      pacman:
        update_cache: yes
        upgrade: yes

    - name: Install necessary packages
      pacman:
        name:
          - xorg
          - bspwm
          - sxhkd
          - xorg-xinit
          - xterm
          - feh
          - xorg-xauth
          - polybar
          - xf86-input-libinput
          - alsa-utils
          - lm_sensors
          - sysstat
          - virt-manager
          - qemu
          - libvirt
          - virt-install
          - zsh
          - kitty
          - neovim
          - touchegg
        state: present

    - name: Enable and start the libvirtd service
      systemd:
        name: libvirtd
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Set zsh as the default shell for the target user
      user:
        name: "{{ target_user }}"
        shell: /bin/zsh

    - name: Check if Oh My Zsh is already installed
      stat:
        path: "/home/{{ target_user }}/.oh-my-zsh"
      register: ohmyzsh_installed
      become_user: "{{ target_user }}"  # Check as the target user

    - name: Install Oh My Zsh for the target user
      when: not ohmyzsh_installed.stat.exists  # Run only if Oh My Zsh isn't installed
      become_user: "{{ target_user }}"  # become the target user for this task
      shell: |
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        executable: /bin/bash  # ensure we're running the command with bash
      environment:  # setting environment variables
        RUNZSH: 'no'  # prevent automatic running of zsh after installation
        CHSH: 'no'  # prevent changing the default shell, since it's already been set to zsh
        ZSH: "/home/{{ target_user }}/.oh-my-zsh"  # Oh My Zsh installation directory
      register: ohmyzsh_install  # register the output for debugging
      changed_when: true  # If the task is run, we can assume a change should be marked
      async: 60  # run the task asynchronously with a timeout of 60s
      poll: 10  # check the status every 10 seconds


    - name: Set timezone to Amsterdam
      timezone:
        name: Europe/Amsterdam

    - name: Ensure home directory permissions are correct
      file:
        path: "/home/{{ target_user }}"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'

    - name: Ensure .Xauthority file exists
      file:
        path: "/home/{{ target_user }}/.Xauthority"
        state: touch
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0600'

    - name: Add user to video group
      user:
        name: "{{ target_user }}"
        groups: video
        append: yes

    - name: Add user to input group
      user:
        name: "{{ target_user }}"
        groups: input
        append: yes

    - name: Ensure .config directory exists for user
      file:
        path: "/home/{{ target_user }}/.config"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'

    - name: Create kitty config directory
      file:
        path: "/home/{{ target_user }}/.config/kitty"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'

    - name: Create bspwm config directory
      file:
        path: "/home/{{ target_user }}/.config/bspwm"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'

    - name: Create sxhkd config directory
      file:
        path: "/home/{{ target_user }}/.config/sxhkd"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'

    - name: Configure sxhkd hotkeys to launch kitty with 'super + Return'
      lineinfile:
        path: "/home/{{ target_user }}/.config/sxhkd/sxhkdrc"
        regexp: '^super + Return'
        line: |
          # Workspace switching
          super + Return
              kitty
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0644'
        create: yes #

    - name: Configure kitty config
      copy:
        src: "kitty/kitty.conf"
        dest: "/home/{{ target_user }}/.config/kitty/kitty.conf"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0644'
     

    - name: Configure kitty colorscheme
      copy:
        src: "kitty/colorscheme.conf"
        dest: "/home/{{ target_user }}/.config/kitty/colorscheme.conf"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0644' #

    - name: Configure polybar config
      copy:
        src: "polybar/config"
        dest: "/home/{{ target_user }}/.config/polybar/config"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0644'
      
    - name: Configure sxhkd hotkeys for workspace switching with 'super + left/right'
      lineinfile:
        path: "/home/{{ target_user }}/.config/sxhkd/sxhkdrc"
        insertafter: EOF
        line: |
          # Workspace switching to the left
          super + Left
              bspc desktop -f prev.local
          # Workspace switching to the right
          super + Right
              bspc desktop -f next.local
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0644'
        create: yes

    - name: Configure sxhkd hotkeys for workspace switching
      lineinfile:
        path: "/home/{{ target_user }}/.config/sxhkd/sxhkdrc"
        insertafter: EOF
        line: |
          # Workspace switching
          super + {1-9,0}
              bspc desktop -f '^{1-9,10}'
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0644'

    - name: Copy bspwm configuration
      copy:
        dest: "/home/{{ target_user }}/.config/bspwm/bspwmrc"
        content: |
          #!/bin/sh
          bspc monitor -d I II III IV V VI VII VIII IX X
          bspc config border_width 2
          bspc config window_gap 12
          bspc config split_ratio 0.52
          bspc config borderless_monocle true
          bspc config gapless_monocle true
          bspc rule -a Gimp desktop='^8' state=floating           follow=on
          bspc rule -a Chromium desktop='^2'
          bspc rule -a mplayer2 state=floating
          bspc rule -a Kupfer.py focus=on
          bspc rule -a Screenkey manage=off
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'

    - name: Ensure .config/bspwm directory exists
      file:
        path: "/home/{{ target_user }}/.config/bspwm"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'

    - name: Start virt-manager on workspace 1 on bspwm
      blockinfile:
        path: "/home/{{ target_user }}/.config/bspwm/bspwmrc"
        block: |
          # Launch virt-manager on workspace 1
          bspc rule -a virt-manager-desktop desk='^1' follow=on
          virt-manager &
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR VIRT-MANAGER"
        create: yes
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'

    - name: Configure bspwm to open Kitty on workspace II
      lineinfile:
        path: "/home/{{ target_user }}/.config/bspwm/bspwmrc"
        insertbefore: "# Additional settings or rules can be added below"
        line: "bspc rule -a 'kitty' desktop='^2' follow=on"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'
        create: yes

    - name: Ensure polybar config directory exists
      file:
        path: "/home/{{ target_user }}/.config/polybar"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'

    - name: Ensure .config/touchegg directory exists for user
      file:
        path: "/home/{{ target_user }}/.config/touchegg"
        state: directory
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'

    - name: Configure touchegg for three-finger swipe gestures
      copy:
        dest: "/home/{{ target_user }}/.config/touchegg/touchegg.conf"
        content: |
          <?xml version="1.0"?>
          <touchégg>
            <settings>
              <property name="composed_gestures_time">0</property>
            </settings>
            <application name="All">
              <gesture type="SWIPE" fingers="3" direction="LEFT">
                <action type="SEND_KEYS">super+Left</action>
              </gesture>
              <gesture type="SWIPE" fingers="3" direction="RIGHT">
                <action type="SEND_KEYS">super+Right</action>
              </gesture>
            </application>
          </touchégg>
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0644'

    - name: Enable touchegg service for the target user
      systemd:
        name: touchegg.service
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Copy .xinitrc file to user's home directory
      copy:
        dest: "/home/{{ target_user }}/.xinitrc"
        content: |
          #!/bin/sh
          # Set up an environment variable, if needed
          export SOME_VARIABLE="value"

          # Start some background applications
          xsetroot -solid grey &  # Set a solid grey background
          xrdb -merge ~/.Xresources &  # Load X resources (like terminal colors, fonts, etc.)

          # Set the background image using feh
          feh --bg-scale /home/{{ target_user }}/readme.md/background.jpg &

          # Launch polybar
          polybar example &

          # Start sxhkd (Simple X Hotkey Daemon)
          sxhkd & 

          touchegg &

          # Start the window manager or desktop environmen
          exec bspwm
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0755'

# End of playbook
